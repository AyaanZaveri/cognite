datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL") // uses connection pooling
  directUrl  = env("DIRECT_URL")
  extensions = [vector]
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
  binaryTargets   = ["native", "linux-arm64-openssl-1.0.x"]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  username      String?   @unique
  email         String?   @unique
  emailVerified DateTime?
  bio           String?   @default("Cognite is pretty awesome ðŸ”¥")
  image         String?
  createdDate   DateTime  @default(now())
  accounts      Account[]
  sessions      Session[]
  Cog           Cog[]

  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}

model Embeddings {
  id        String                 @id @default(cuid())
  content   String?
  cog_id    String
  embedding Unsupported("vector")?
  cog       Cog                    @relation(fields: [cog_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Cog {
  id          String       @id @default(cuid())
  userId      String
  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  name        String       @default("")
  description String       @default("")
  createdDate DateTime     @default(now())
  slug        String
  imgUrl      String?      @default("https://em-content.zobj.net/thumbs/240/apple/354/fire_1f525.png")
  embeddings  Embeddings[]
  tags        Tag[]        @relation("CogToTag")
  private     Boolean      @default(false)

  @@unique([userId, slug])
  @@index([userId])
  @@index([private])
}

model Tag {
  id   String @id @default(cuid())
  name String @unique
  cogs Cog[]  @relation("CogToTag")
}
